<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Scipy, | __del__( self )]]></title>
  <link href="http://Zulko.github.io/blog/categories/scipy/atom.xml" rel="self"/>
  <link href="http://Zulko.github.io/"/>
  <updated>2014-12-18T08:26:32+01:00</updated>
  <id>http://Zulko.github.io/</id>
  <author>
    <name><![CDATA[Zulko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Delay differential equations in Python]]></title>
    <link href="http://Zulko.github.io/blog/2013/10/22/delay-differential-equations-in-python/"/>
    <updated>2013-10-22T07:50:00+02:00</updated>
    <id>http://Zulko.github.io/blog/2013/10/22/delay-differential-equations-in-python</id>
    <content type="html"><![CDATA[<p><em>I wrote</em> <a href="https://github.com/Zulko/ddeint">ddeint</a>, <em>a simple module/function for solving Delay Differential Equations (DDEs) in Python. It is not very fast, but very flexible, and coded in just <a href="https://gist.github.com/Zulko/7096011">a few lines</a> on top of Scipy’s differential equations solver,</em> <code>odeint</code>.</p>

<!-- more -->

<p>Say you have a delay differential equation like this:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{cases}
y(t) = g(t), \,\,\,\, &\mbox{for $t<0$} \\
y'(t) = F( y, t), \,\,\,\, &\mbox{for $t \geq 0$},
\end{cases}
 %]]&gt;</script>

<p>where $F(y, t)$ can involve delayed values of $y$, of the form $y(t-d)$.</p>

<p>To solve this DDE system at points <code>t=[t1, t2 ...]</code> you would just write</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">y</span> <span class="o">=</span> <span class="n">ddeint</span><span class="p">(</span><span class="n">F</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">t</span><span class="p">)</span> <span class="c"># returns [y(t1), y(t2) …]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2 id="a-simple-example">A simple example</h2>

<p>Let us start with a DDE whose exact solution is known (it is the sine function), just to check that the algorithm works as expected:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{cases}
y(t) = \sin(t), \,\,\,\, &\mbox{for $t<0$} \\ 
y'(t) = y(t-3\pi/2), \,\,\,\, &\mbox{for $t \geq 0$}
\end{cases}
 %]]&gt;</script>

<p>Here is how we solve it with <code>ddeint</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">pylab</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">ddeint</span> <span class="kn">import</span> <span class="n">ddeint</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">model</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">Y</span><span class="p">,</span><span class="n">t</span> <span class="p">:</span> <span class="n">Y</span><span class="p">(</span><span class="n">t</span> <span class="o">-</span> <span class="mi">3</span><span class="o">*</span><span class="n">pi</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span> <span class="c"># Model</span>
</span><span class='line'><span class="n">tt</span> <span class="o">=</span> <span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">50</span><span class="p">,</span><span class="mi">10000</span><span class="p">)</span> <span class="c"># Time start, time end, nb of points/steps</span>
</span><span class='line'><span class="n">g</span><span class="o">=</span><span class="n">sin</span> <span class="c"># Expression of Y(t) before the integration interval</span>
</span><span class='line'><span class="n">yy</span> <span class="o">=</span> <span class="n">ddeint</span><span class="p">(</span><span class="n">model</span><span class="p">,</span><span class="n">g</span><span class="p">,</span><span class="n">tt</span><span class="p">)</span> <span class="c"># Solving&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;plotting&quot;</span><span class="o">&gt;</span><span class="n">PLOTTING</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">plot</span><span class="p">(</span><span class="n">tt</span><span class="p">,</span><span class="n">yy</span><span class="p">,</span><span class="n">c</span><span class="o">=</span><span class="err">’</span><span class="n">r</span><span class="err">’</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="err">”$</span><span class="n">y</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="err">$”</span><span class="p">)</span>
</span><span class='line'><span class="n">plot</span><span class="p">(</span><span class="n">tt</span><span class="p">,</span><span class="n">sin</span><span class="p">(</span><span class="n">tt</span><span class="p">),</span><span class="n">c</span><span class="o">=</span><span class="err">’</span><span class="n">b</span><span class="err">’</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="err">”$</span><span class="n">sin</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="err">$”</span><span class="p">)</span>
</span><span class='line'><span class="n">set_ylim</span><span class="p">(</span><span class="n">ymax</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span> <span class="c"># make room for the legend</span>
</span><span class='line'><span class="n">legend</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img class="center" src="/images/ddeint/dde_sin.jpeg"></p>

<p>The resulting plot compares our solution (red) with the exact solution (blue). See how our result eventually detaches itself from the actual solution as a consequence of many successive approximations ? As DDEs tend to create chaotic behaviors, you can expect the error to explode very fast. As I am no DDE expert, I would recommend checking for convergence in all cases, i.e. increasing the time resolution and see how it affects the result. Keep in mind that the past values of Y(t) are computed by interpolating the values of Y found at the previous integration points, so the more points you ask for, the more precise your result.</p>

<h2 id="an-example-with-parameters">An example with parameters</h2>

<p>You can set the parameters of your model at integration time, like in Scipy’s <code>ODE</code> and <code>odeint</code>. As an example, imagine a chemical product with degradation rate $r$, and whose production rate is negatively linked to the quantity of this same product at the time $(t-d)$:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{cases}
y(t) = 0, \,\,\,\, &\mbox{for $t<0$} \\
y'(t) = \dfrac{1}{1+(\dfrac{y(t-d)}{K})^2} -ry(t), \,\,\,\,
&\mbox{ for $t\geq 0$}.
\end{cases}
 %]]&gt;</script>

<p>We have three parameters that we can choose freely. For $K = 0.1$, $d = 5$, $r = 1$, we obtain oscillations !</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># MODEL, WITH UNKNOWN PARAMETERS</span>
</span><span class='line'><span class="n">model</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">Y</span><span class="p">,</span><span class="n">t</span><span class="p">,</span> <span class="n">k</span><span class="p">,</span><span class="n">d</span><span class="p">,</span><span class="n">r</span> <span class="p">:</span>  <span class="mi">1</span><span class="o">/</span><span class="p">(</span><span class="mi">1</span><span class="o">+</span><span class="p">(</span><span class="n">Y</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="n">d</span><span class="p">)</span><span class="o">/</span><span class="n">k</span><span class="p">)</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;*</span><span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="n">r</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">Y</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span><span class='line'><span class="n">g</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">t</span><span class="p">:</span><span class="mi">0</span> <span class="c"># history before t=0&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">tt</span> <span class="o">=</span> <span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">50</span><span class="p">,</span><span class="mi">10000</span><span class="p">)</span>
</span><span class='line'><span class="n">yy</span> <span class="o">=</span> <span class="n">ddeint</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">tt</span><span class="p">,</span> <span class="n">fargs</span><span class="o">=</span><span class="p">(</span><span class="mf">0.1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span> <span class="c"># K=0.1, d=5, r=1&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">plot</span><span class="p">(</span><span class="n">tt</span><span class="p">,</span><span class="n">yy</span><span class="p">,</span><span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img class="center" src="/images/ddeint/dde_negativefeedback.jpeg"></p>

<h2 id="example-with-several-variables">Example with several variables</h2>

<p>The variable Y can be a vector, which means that you can solve DDE 
systems of several variables. Here is a version of the famous 
Lotka-Volterra two-variables system, where we introduce a delay $d$. 
For $d=0$ the system is a classical Lotka-Volterra system ; for 
$d\neq 0$ the system undergoes an important amplification:</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{cases}
\big(x(t), y(t)\big) = (1,2) \,\,\,\, &\mbox{for $t<0$}, \\
x'(t) = 0.5x(t)\big(1-y(t-d)\big) \,\,\,\, &\mbox{for $t\geq 0$}, \\
y'(t) = -0.5y(t)\big(1-x(t-d)\big) \,\,\,\, &\mbox{for $\geq 0$}.
\end{cases}
 %]]&gt;</script>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">model</span><span class="p">(</span><span class="n">Y</span><span class="p">,</span><span class="n">t</span><span class="p">,</span><span class="n">d</span><span class="p">):</span>
</span><span class='line'>    <span class="n">x</span><span class="p">,</span><span class="n">y</span> <span class="o">=</span> <span class="n">Y</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</span><span class='line'>    <span class="n">xd</span><span class="p">,</span><span class="n">yd</span> <span class="o">=</span> <span class="n">Y</span><span class="p">(</span><span class="n">t</span><span class="o">-</span><span class="n">d</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">array</span><span class="p">([</span><span class="mf">0.5</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">x</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">yd</span><span class="p">),</span> <span class="o">-</span><span class="mf">0.5</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">y</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">xd</span><span class="p">)])</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">g</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">t</span> <span class="p">:</span> <span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>
</span><span class='line'><span class="n">tt</span> <span class="o">=</span> <span class="n">linspace</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">30</span><span class="p">,</span><span class="mi">20000</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">]:</span>
</span><span class='line'>    <span class="n">yy</span> <span class="o">=</span> <span class="n">ddeint</span><span class="p">(</span><span class="n">model</span><span class="p">,</span><span class="n">g</span><span class="p">,</span><span class="n">tt</span><span class="p">,</span><span class="n">fargs</span><span class="o">=</span><span class="p">(</span><span class="n">d</span><span class="p">,))</span>
</span><span class='line'>    <span class="c"># WE PLOT X AGAINST Y</span>
</span><span class='line'>    <span class="n">plot</span><span class="p">(</span><span class="n">yy</span><span class="p">[:,</span><span class="mi">0</span><span class="p">],</span> <span class="n">yy</span><span class="p">[:,</span><span class="mi">1</span><span class="p">],</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="err">’</span><span class="n">delay</span> <span class="o">=</span> <span class="o">%.</span><span class="mo">01</span><span class="n">f</span><span class="err">’</span><span class="o">%</span><span class="n">d</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">legend</span><span class="p">()</span> <span class="c"># display the legend</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img class="center" src="/images/ddeint/dde_lotka.jpeg"></p>

<h2 id="example-with-a-non-constant-delay">Example with a non-constant delay</h2>

<p>In this last example the delay depends on the value of $y(t)$ :</p>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{cases}
y(t) = 1, \,\,\,\, &\mbox{for $t<0$}, \\
y'(t) = - y\big(t-3\cos(y(t))^2 \big),\,\,\,\,
&\mbox{for $t \geq 0$}.
\end{cases}
 %]]&gt;</script>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">model</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">Y</span><span class="p">,</span><span class="n">t</span><span class="p">:</span>  <span class="o">-</span><span class="n">Y</span><span class="p">(</span> <span class="n">t</span><span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="n">cos</span><span class="p">(</span> <span class="n">Y</span><span class="p">(</span><span class="n">t</span><span class="p">)</span> <span class="p">)</span><span class="o">**</span><span class="mi">2</span> <span class="p">)</span>
</span><span class='line'><span class="n">tt</span> <span class="o">=</span> <span class="n">linspace</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">2000</span><span class="p">)</span>
</span><span class='line'><span class="n">yy</span> <span class="o">=</span> <span class="n">ddeint</span><span class="p">(</span><span class="n">model</span><span class="p">,</span> <span class="k">lambda</span> <span class="n">t</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="n">tt</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">plot</span><span class="p">(</span><span class="n">tt</span><span class="p">,</span> <span class="n">yy</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><img class="center" src="/images/ddeint/ydependent.jpeg"></p>
]]></content>
  </entry>
  
</feed>
